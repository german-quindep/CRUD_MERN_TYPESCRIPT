{"ast":null,"code":"var _jsxFileName = \"/home/german/Escritorio/frontend-employe/src/login/components/form/FormHtml.component.tsx\";\nimport { InputText, Password } from \"primereact\";\nimport { Controller } from \"react-hook-form\";\nimport { ButtonPrimary } from \"../../../shared/components/buttons/ButtonPrimary\";\nimport { ErrorsInputs } from \"../../../shared/messages/errorsMessages\";\nimport { passwordValidate, usernameValidate } from \"../../validations/validateInputs\";\nimport { LoginFormHooks } from \"./Form.component\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormHtml = () => {\n  var _errors$username, _errors$password;\n  const {\n    handleSubmit,\n    onSubmit,\n    register,\n    errors,\n    control\n  } = LoginFormHooks();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"items\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"p-input-icon-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"pi pi-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputText, {\n              ...register(\"username\", usernameValidate),\n              placeholder: \"Username\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorsInputs, {\n            messages: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n          }, \"username\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: control,\n            rules: passwordValidate,\n            render: _ref => {\n              let {\n                field,\n                field: {\n                  ref\n                }\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(Password, {\n                ...field,\n                placeholder: \"Password\",\n                value: field.value || \"\",\n                inputRef: ref,\n                toggleMask: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorsInputs, {\n            messages: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, \"password\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-items\",\n            children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n              type: \"submit\",\n              icon: \"pi pi-check\",\n              iconsPos: \"left\",\n              label: \"Login\",\n              styles: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = FormHtml;\nvar _c;\n$RefreshReg$(_c, \"FormHtml\");","map":{"version":3,"names":["InputText","Password","Controller","ButtonPrimary","ErrorsInputs","passwordValidate","usernameValidate","LoginFormHooks","FormHtml","handleSubmit","onSubmit","register","errors","control","username","message","field","ref","value","password","width"],"sources":["/home/german/Escritorio/frontend-employe/src/login/components/form/FormHtml.component.tsx"],"sourcesContent":["import { InputText, Password } from \"primereact\";\nimport { Controller } from \"react-hook-form\";\nimport { ButtonPrimary } from \"../../../shared/components/buttons/ButtonPrimary\";\nimport { ErrorsInputs } from \"../../../shared/messages/errorsMessages\";\nimport {\n  passwordValidate,\n  usernameValidate,\n} from \"../../validations/validateInputs\";\nimport { LoginFormHooks } from \"./Form.component\";\nimport \"./styles.css\";\n\nexport const FormHtml = () => {\n  const { handleSubmit, onSubmit, register, errors, control } =\n    LoginFormHooks();\n  return (\n    <div className=\"container\">\n      <div className=\"cards\">\n        <div className=\"items\">\n          <h1>Login</h1>\n        </div>\n        <div className=\"items\">\n          <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n            <h6>Usuario</h6>\n            <span className=\"p-input-icon-left\">\n              <i className=\"pi pi-user\" />\n              <InputText\n                {...register(\"username\", usernameValidate)}\n                placeholder=\"Username\"\n                autoFocus\n              />\n            </span>\n            <ErrorsInputs\n              key={\"username\"}\n              messages={errors.username?.message}\n            />\n            <h6>Contrase√±a</h6>\n            <Controller\n              name=\"password\"\n              control={control}\n              rules={passwordValidate}\n              render={({ field, field: { ref } }) => (\n                <Password\n                  {...field}\n                  placeholder=\"Password\"\n                  value={field.value || \"\"}\n                  inputRef={ref}\n                  toggleMask\n                />\n              )}\n            />\n            <ErrorsInputs\n              key={\"password\"}\n              messages={errors.password?.message}\n            />\n            <div className=\"space-items\">\n              <ButtonPrimary\n                type=\"submit\"\n                icon=\"pi pi-check\"\n                iconsPos=\"left\"\n                label=\"Login\"\n                styles={{ width: \"100%\" }}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,YAAY;AAChD,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,aAAa,QAAQ,kDAAkD;AAChF,SAASC,YAAY,QAAQ,yCAAyC;AACtE,SACEC,gBAAgB,EAChBC,gBAAgB,QACX,kCAAkC;AACzC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,cAAc;AAAC;AAEtB,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC5B,MAAM;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GACzDN,cAAc,EAAE;EAClB,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,OAAO;MAAA,wBACpB;QAAK,SAAS,EAAC,OAAO;QAAA,uBACpB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAc;QAAA;QAAA;QAAA;MAAA,QACV,eACN;QAAK,SAAS,EAAC,OAAO;QAAA,uBACpB;UAAM,MAAM,EAAC,EAAE;UAAC,QAAQ,EAAEE,YAAY,CAACC,QAAQ,CAAE;UAAA,wBAC/C;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB,eAChB;YAAM,SAAS,EAAC,mBAAmB;YAAA,wBACjC;cAAG,SAAS,EAAC;YAAY;cAAA;cAAA;cAAA;YAAA,QAAG,eAC5B,QAAC,SAAS;cAAA,GACJC,QAAQ,CAAC,UAAU,EAAEL,gBAAgB,CAAC;cAC1C,WAAW,EAAC,UAAU;cACtB,SAAS;YAAA;cAAA;cAAA;cAAA;YAAA,QACT;UAAA;YAAA;YAAA;YAAA;UAAA,QACG,eACP,QAAC,YAAY;YAEX,QAAQ,sBAAEM,MAAM,CAACE,QAAQ,qDAAf,iBAAiBC;UAAQ,GAD9B,UAAU;YAAA;YAAA;YAAA;UAAA,QAEf,eACF;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAmB,eACnB,QAAC,UAAU;YACT,IAAI,EAAC,UAAU;YACf,OAAO,EAAEF,OAAQ;YACjB,KAAK,EAAER,gBAAiB;YACxB,MAAM,EAAE;cAAA,IAAC;gBAAEW,KAAK;gBAAEA,KAAK,EAAE;kBAAEC;gBAAI;cAAE,CAAC;cAAA,oBAChC,QAAC,QAAQ;gBAAA,GACHD,KAAK;gBACT,WAAW,EAAC,UAAU;gBACtB,KAAK,EAAEA,KAAK,CAACE,KAAK,IAAI,EAAG;gBACzB,QAAQ,EAAED,GAAI;gBACd,UAAU;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACV;YAAA;UACF;YAAA;YAAA;YAAA;UAAA,QACF,eACF,QAAC,YAAY;YAEX,QAAQ,sBAAEL,MAAM,CAACO,QAAQ,qDAAf,iBAAiBJ;UAAQ,GAD9B,UAAU;YAAA;YAAA;YAAA;UAAA,QAEf,eACF;YAAK,SAAS,EAAC,aAAa;YAAA,uBAC1B,QAAC,aAAa;cACZ,IAAI,EAAC,QAAQ;cACb,IAAI,EAAC,aAAa;cAClB,QAAQ,EAAC,MAAM;cACf,KAAK,EAAC,OAAO;cACb,MAAM,EAAE;gBAAEK,KAAK,EAAE;cAAO;YAAE;cAAA;cAAA;cAAA;YAAA;UAC1B;YAAA;YAAA;YAAA;UAAA,QACE;QAAA;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAzDWZ,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}