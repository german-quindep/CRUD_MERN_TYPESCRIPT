{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { postLogin } from \"../../services/login.service\";\nimport urlFront from \"../../../shared/routes/routesFrontend.routes\";\nimport { usePermissions } from \"../../../shared/hooks/usePermision\";\nexport const LoginFormHooks = () => {\n  _s();\n  const {\n    setUsers\n  } = usePermissions();\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n  /* HANDLESUBMIT */\n  const onSubmit = async data => {\n    const resp = await postLogin(data);\n    if ((resp === null || resp === void 0 ? void 0 : resp.status) === 200) {\n      navigate(`${urlFront.module}${urlFront.main}`);\n    }\n  };\n  return {\n    register,\n    handleSubmit,\n    onSubmit,\n    errors,\n    control\n  };\n};\n_s(LoginFormHooks, \"fQ1tLczFQrxIuq79reYU4zLWZ6o=\", false, function () {\n  return [usePermissions, useForm, useNavigate];\n});\n_c = LoginFormHooks;\nvar _c;\n$RefreshReg$(_c, \"LoginFormHooks\");","map":{"version":3,"names":["useForm","useNavigate","postLogin","urlFront","usePermissions","LoginFormHooks","setUsers","register","handleSubmit","control","formState","errors","navigate","onSubmit","data","resp","status","module","main"],"sources":["/home/german/Escritorio/frontend-employe/src/login/components/form/Form.component.ts"],"sourcesContent":["import { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ILogin } from \"../../models/Ilogin.interface\";\nimport { postLogin } from \"../../services/login.service\";\nimport urlFront from \"../../../shared/routes/routesFrontend.routes\";\nimport { usePermissions } from \"../../../shared/hooks/usePermision\";\n\nexport const LoginFormHooks = () => {\n  const { setUsers } = usePermissions();\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm<ILogin>();\n  const navigate = useNavigate();\n  /* HANDLESUBMIT */\n  const onSubmit: SubmitHandler<ILogin> = async (data: ILogin) => {\n    const resp = await postLogin(data);\n    if (resp?.status === 200) {\n      navigate(`${urlFront.module}${urlFront.main}`);\n    }\n  };\n\n  return { register, handleSubmit, onSubmit, errors, control };\n};\n"],"mappings":";AAAA,SAAwBA,OAAO,QAAQ,iBAAiB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,SAAS,QAAQ,8BAA8B;AACxD,OAAOC,QAAQ,MAAM,8CAA8C;AACnE,SAASC,cAAc,QAAQ,oCAAoC;AAEnE,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGF,cAAc,EAAE;EACrC,MAAM;IACJG,QAAQ;IACRC,YAAY;IACZC,OAAO;IACPC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGX,OAAO,EAAU;EACrB,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAC9B;EACA,MAAMY,QAA+B,GAAG,MAAOC,IAAY,IAAK;IAC9D,MAAMC,IAAI,GAAG,MAAMb,SAAS,CAACY,IAAI,CAAC;IAClC,IAAI,CAAAC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,MAAM,MAAK,GAAG,EAAE;MACxBJ,QAAQ,CAAE,GAAET,QAAQ,CAACc,MAAO,GAAEd,QAAQ,CAACe,IAAK,EAAC,CAAC;IAChD;EACF,CAAC;EAED,OAAO;IAAEX,QAAQ;IAAEC,YAAY;IAAEK,QAAQ;IAAEF,MAAM;IAAEF;EAAQ,CAAC;AAC9D,CAAC;AAAC,GAlBWJ,cAAc;EAAA,QACJD,cAAc,EAM/BJ,OAAO,EACMC,WAAW;AAAA;AAAA,KARjBI,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}