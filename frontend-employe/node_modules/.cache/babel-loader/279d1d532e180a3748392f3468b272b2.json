{"ast":null,"code":"var _jsxFileName = \"/home/german/Escritorio/frontend-employe/src/shared/routes/routerNavigate.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { RouterLogin } from \"../../login/routes/routerLogin\";\nimport { RouterPerson } from \"../../person/routes/routerPerson\";\nimport { RouterMain } from \"../components/main/routes/main.routes\";\nimport { ProtectedRoutes } from \"./ProtectedRoutes.routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RouterNavigate = () => {\n  _s();\n  const tokenUsers = localStorage.getItem(\"token\");\n  const [users, setUsers] = useState(false);\n  if (tokenUsers) setUsers(true);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(RouterLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n        users: users,\n        children: /*#__PURE__*/_jsxDEV(RouterMain, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n      users: users,\n      children: /*#__PURE__*/_jsxDEV(RouterPerson, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(RouterNavigate, \"3v6VL/qxFYsFywK1Mz5solYBNz4=\");\n_c = RouterNavigate;\nvar _c;\n$RefreshReg$(_c, \"RouterNavigate\");","map":{"version":3,"names":["useState","BrowserRouter","Route","RouterLogin","RouterPerson","RouterMain","ProtectedRoutes","RouterNavigate","tokenUsers","localStorage","getItem","users","setUsers"],"sources":["/home/german/Escritorio/frontend-employe/src/shared/routes/routerNavigate.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { RouterLogin } from \"../../login/routes/routerLogin\";\nimport { RouterPerson } from \"../../person/routes/routerPerson\";\nimport { RouterMain } from \"../components/main/routes/main.routes\";\nimport { ProtectedRoutes } from \"./ProtectedRoutes.routes\";\nexport const RouterNavigate = () => {\n  const tokenUsers = localStorage.getItem(\"token\");\n  const [users, setUsers] = useState<boolean>(false);\n  if (tokenUsers) setUsers(true);\n  return (\n    <BrowserRouter>\n      <RouterLogin />\n      <Route\n        element={\n          <ProtectedRoutes users={users}>\n            <RouterMain />\n          </ProtectedRoutes>\n        }\n      />\n      <ProtectedRoutes users={users}>\n        <RouterPerson />\n      </ProtectedRoutes>\n    </BrowserRouter>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,EAAEC,KAAK,QAAQ,kBAAkB;AACvD,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,eAAe,QAAQ,0BAA0B;AAAC;AAC3D,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAClC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAClD,IAAIQ,UAAU,EAAEI,QAAQ,CAAC,IAAI,CAAC;EAC9B,oBACE,QAAC,aAAa;IAAA,wBACZ,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,KAAK;MACJ,OAAO,eACL,QAAC,eAAe;QAAC,KAAK,EAAED,KAAM;QAAA,uBAC5B,QAAC,UAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAEjB;MAAA;MAAA;MAAA;IAAA,QACD,eACF,QAAC,eAAe;MAAC,KAAK,EAAEA,KAAM;MAAA,uBAC5B,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEpB,CAAC;AAAC,GAnBWJ,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}