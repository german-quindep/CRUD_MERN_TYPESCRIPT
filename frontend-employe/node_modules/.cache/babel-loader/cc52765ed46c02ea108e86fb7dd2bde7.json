{"ast":null,"code":"import apiInstance from \"../../shared/interceptors/axios.interceptor\";\nimport routesApi from \"../../shared/routes/routesAPi.routes\";\nconst setToken = token => {\n  localStorage.setItem(\"tokenUser\", token);\n};\nexport const postLogin = async form => {\n  const resp = await apiInstance.post(routesApi.login, form);\n  try {\n    var _resp$data;\n    setToken(resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.data);\n    return resp;\n  } catch (errors) {\n    console.log(errors);\n  }\n};","map":{"version":3,"names":["apiInstance","routesApi","setToken","token","localStorage","setItem","postLogin","form","resp","post","login","data","errors","console","log"],"sources":["/home/german/Escritorio/frontend-employe/src/login/services/login.service.ts"],"sourcesContent":["import apiInstance from \"../../shared/interceptors/axios.interceptor\";\nimport routesApi from \"../../shared/routes/routesAPi.routes\";\nimport { ILogin } from \"../models/Ilogin.interface\";\n\nconst setToken = (token: string) => {\n  localStorage.setItem(\"tokenUser\", token);\n};\nexport const postLogin = async (form: ILogin) => {\n  const resp = await apiInstance.post(routesApi.login, form);\n  try {\n    setToken(resp?.data?.data);\n    return resp;\n  } catch (errors) {\n    console.log(errors);\n  }\n};\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,6CAA6C;AACrE,OAAOC,SAAS,MAAM,sCAAsC;AAG5D,MAAMC,QAAQ,GAAIC,KAAa,IAAK;EAClCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC;AAC1C,CAAC;AACD,OAAO,MAAMG,SAAS,GAAG,MAAOC,IAAY,IAAK;EAC/C,MAAMC,IAAI,GAAG,MAAMR,WAAW,CAACS,IAAI,CAACR,SAAS,CAACS,KAAK,EAAEH,IAAI,CAAC;EAC1D,IAAI;IAAA;IACFL,QAAQ,CAACM,IAAI,aAAJA,IAAI,qCAAJA,IAAI,CAAEG,IAAI,+CAAV,WAAYA,IAAI,CAAC;IAC1B,OAAOH,IAAI;EACb,CAAC,CAAC,OAAOI,MAAM,EAAE;IACfC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACrB;AACF,CAAC"},"metadata":{},"sourceType":"module"}