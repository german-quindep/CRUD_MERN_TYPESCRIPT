{"ast":null,"code":"var _jsxFileName = \"/home/german/Escritorio/frontend-employe/src/person/components/AutoComplete/AutoComplete.tsx\",\n  _s = $RefreshSig$();\nimport { AutoComplete } from \"primereact\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AutocompletePerson = () => {\n  _s();\n  const [filteredPerson, setFilteredPersons] = useState([]);\n  const [selectedPerson, setSelectedPersons] = useState(\"\");\n  const persons = [{\n    full_name: \"Pepe Jose\",\n    id_person: \"asdasdasdasdasd\",\n    state: true,\n    identity: 98762123\n  }, {\n    full_name: \"Lucho Pancho\",\n    id_person: \"sdasda\",\n    state: true,\n    identity: 9876521\n  }, {\n    full_name: \"Juan Carlos\",\n    id_person: \"qwe123\",\n    state: true,\n    identity: 123242\n  }, {\n    full_name: \"Mario Jose\",\n    id_person: \"gfsd23\",\n    state: true,\n    identity: 535657\n  }];\n  const searchPersons = event => {\n    let _filteredCountries;\n    if (!event.query.trim().length) {\n      _filteredCountries = [...persons];\n    } else {\n      _filteredCountries = persons.filter(persons => {\n        return persons.full_name.toLowerCase().startsWith(event.query.toLowerCase());\n      });\n    }\n    setFilteredPersons(_filteredCountries);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"p-float-label\",\n      children: [/*#__PURE__*/_jsxDEV(AutoComplete, {\n        value: selectedPerson,\n        suggestions: filteredPerson,\n        completeMethod: searchPersons,\n        field: \"full_name\",\n        onChange: e => setSelectedPersons(e.value),\n        \"aria-label\": \"Persons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"person_id\",\n        children: \"Name person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AutocompletePerson, \"IRK4RQsR4QRRNtfwLUTppvGtfug=\");\n_c = AutocompletePerson;\nvar _c;\n$RefreshReg$(_c, \"AutocompletePerson\");","map":{"version":3,"names":["AutoComplete","useState","AutocompletePerson","filteredPerson","setFilteredPersons","selectedPerson","setSelectedPersons","persons","full_name","id_person","state","identity","searchPersons","event","_filteredCountries","query","trim","length","filter","toLowerCase","startsWith","e","value"],"sources":["/home/german/Escritorio/frontend-employe/src/person/components/AutoComplete/AutoComplete.tsx"],"sourcesContent":["import { AutoComplete, AutoCompleteCompleteMethodParams } from \"primereact\";\nimport { useState } from \"react\";\nimport { IPerson } from \"../../models/IPerson\";\n\nexport const AutocompletePerson = () => {\n  const [filteredPerson, setFilteredPersons] = useState<Array<IPerson>>([]);\n  const [selectedPerson, setSelectedPersons] = useState<string>(\"\");\n\n  const persons: Array<IPerson> = [\n    { full_name: \"Pepe Jose\", id_person: \"asdasdasdasdasd\",state:true,identity:98762123 },\n    { full_name: \"Lucho Pancho\", id_person: \"sdasda\" ,state:true,identity:9876521 },\n    { full_name: \"Juan Carlos\", id_person: \"qwe123\" ,state:true,identity:123242 },\n    { full_name: \"Mario Jose\", id_person: \"gfsd23\" ,state:true,identity:535657 },\n  ];\n\n  const searchPersons = (event: AutoCompleteCompleteMethodParams) => {\n    let _filteredCountries: any;\n    if (!event.query.trim().length) {\n      _filteredCountries = [...persons];\n    } else {\n      _filteredCountries = persons.filter((persons: IPerson) => {\n        return persons.full_name\n          .toLowerCase()\n          .startsWith(event.query.toLowerCase());\n      });\n    }\n    setFilteredPersons(_filteredCountries);\n  };\n\n  return (\n    <div className=\"form-group\">\n      <span className=\"p-float-label\">\n        <AutoComplete\n          value={selectedPerson}\n          suggestions={filteredPerson}\n          completeMethod={searchPersons}\n          field=\"full_name\"\n          onChange={(e) => setSelectedPersons(e.value)}\n          aria-label=\"Persons\"\n        />\n        <label htmlFor=\"person_id\">Name person</label>\n      </span>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,YAAY,QAA0C,YAAY;AAC3E,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAGjC,OAAO,MAAMC,kBAAkB,GAAG,MAAM;EAAA;EACtC,MAAM,CAACC,cAAc,EAAEC,kBAAkB,CAAC,GAAGH,QAAQ,CAAiB,EAAE,CAAC;EACzE,MAAM,CAACI,cAAc,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAEjE,MAAMM,OAAuB,GAAG,CAC9B;IAAEC,SAAS,EAAE,WAAW;IAAEC,SAAS,EAAE,iBAAiB;IAACC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAS,CAAC,EACrF;IAAEH,SAAS,EAAE,cAAc;IAAEC,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAQ,CAAC,EAC/E;IAAEH,SAAS,EAAE,aAAa;IAAEC,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAO,CAAC,EAC7E;IAAEH,SAAS,EAAE,YAAY;IAAEC,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAO,CAAC,CAC7E;EAED,MAAMC,aAAa,GAAIC,KAAuC,IAAK;IACjE,IAAIC,kBAAuB;IAC3B,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,EAAE;MAC9BH,kBAAkB,GAAG,CAAC,GAAGP,OAAO,CAAC;IACnC,CAAC,MAAM;MACLO,kBAAkB,GAAGP,OAAO,CAACW,MAAM,CAAEX,OAAgB,IAAK;QACxD,OAAOA,OAAO,CAACC,SAAS,CACrBW,WAAW,EAAE,CACbC,UAAU,CAACP,KAAK,CAACE,KAAK,CAACI,WAAW,EAAE,CAAC;MAC1C,CAAC,CAAC;IACJ;IACAf,kBAAkB,CAACU,kBAAkB,CAAC;EACxC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,uBACzB;MAAM,SAAS,EAAC,eAAe;MAAA,wBAC7B,QAAC,YAAY;QACX,KAAK,EAAET,cAAe;QACtB,WAAW,EAAEF,cAAe;QAC5B,cAAc,EAAES,aAAc;QAC9B,KAAK,EAAC,WAAW;QACjB,QAAQ,EAAGS,CAAC,IAAKf,kBAAkB,CAACe,CAAC,CAACC,KAAK,CAAE;QAC7C,cAAW;MAAS;QAAA;QAAA;QAAA;MAAA,QACpB,eACF;QAAO,OAAO,EAAC,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB;IAAA;MAAA;MAAA;MAAA;IAAA;EACzC;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAxCWpB,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}