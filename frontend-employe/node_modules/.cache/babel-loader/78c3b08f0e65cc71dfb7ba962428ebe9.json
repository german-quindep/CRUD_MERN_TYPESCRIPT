{"ast":null,"code":"var _jsxFileName = \"/home/german/Escritorio/frontend-employe/src/shared/errors/errorsServer.tsx\",\n  _s = $RefreshSig$();\nimport { Toast } from \"primereact\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToastErrors = _ref => {\n  _s();\n  var _toast$current;\n  let {\n    errors\n  } = _ref;\n  const toast = useRef(null);\n  toast === null || toast === void 0 ? void 0 : (_toast$current = toast.current) === null || _toast$current === void 0 ? void 0 : _toast$current.show({\n    severity: \"error\",\n    summary: \"Error Message\",\n    detail: errors,\n    life: 3000\n  });\n  return /*#__PURE__*/_jsxDEV(Toast, {\n    ref: toast\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(ToastErrors, \"x2/k96H6wL/LrDXCNOc4vFD90zc=\");\n_c = ToastErrors;\nvar _c;\n$RefreshReg$(_c, \"ToastErrors\");","map":{"version":3,"names":["Toast","useRef","ToastErrors","errors","toast","current","show","severity","summary","detail","life"],"sources":["/home/german/Escritorio/frontend-employe/src/shared/errors/errorsServer.tsx"],"sourcesContent":["import { Toast } from \"primereact\";\nimport { useRef } from \"react\";\n\ninterface ErrorsServer {\n  errors: any;\n}\n\nexport const ToastErrors = ({ errors }: ErrorsServer) => {\n  const toast = useRef<Toast>(null);\n\n  toast?.current?.show({\n    severity: \"error\",\n    summary: \"Error Message\",\n    detail: errors,\n    life: 3000,\n  });\n  return <Toast ref={toast} />;\n};\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,YAAY;AAClC,SAASC,MAAM,QAAQ,OAAO;AAAC;AAM/B,OAAO,MAAMC,WAAW,GAAG,QAA8B;EAAA;EAAA;EAAA,IAA7B;IAAEC;EAAqB,CAAC;EAClD,MAAMC,KAAK,GAAGH,MAAM,CAAQ,IAAI,CAAC;EAEjCG,KAAK,aAALA,KAAK,yCAALA,KAAK,CAAEC,OAAO,mDAAd,eAAgBC,IAAI,CAAC;IACnBC,QAAQ,EAAE,OAAO;IACjBC,OAAO,EAAE,eAAe;IACxBC,MAAM,EAAEN,MAAM;IACdO,IAAI,EAAE;EACR,CAAC,CAAC;EACF,oBAAO,QAAC,KAAK;IAAC,GAAG,EAAEN;EAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AAC9B,CAAC;AAAC,GAVWF,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}