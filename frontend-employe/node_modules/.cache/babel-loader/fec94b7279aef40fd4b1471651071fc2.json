{"ast":null,"code":"var _jsxFileName = \"/home/german/Escritorio/frontend-employe/src/shared/interceptors/axios.interceptor.tsx\";\nimport { render } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport { ToastErrors } from \"../messages/errorsMessages\";\nimport routesApi from \"../routes/routesAPi.routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem(\"tokenUser\");\nconst apiInstance = axios.create({\n  baseURL: routesApi.api\n});\napiInstance.interceptors.request.use(config => {\n  config.headers = {\n    \"Content-Type\": \"application/json;charset=utf-8\",\n    \"x-access-token\": token ? token : \"\"\n  };\n  return config;\n}, err => {\n  console.log(err);\n});\napiInstance.interceptors.response.use(response => {\n  return response;\n}, err => {\n  render( /*#__PURE__*/_jsxDEV(ToastErrors, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this));\n  return render( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\\"err.response\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 19\n  }, this));\n});\nexport default apiInstance;","map":{"version":3,"names":["render","axios","ToastErrors","routesApi","token","localStorage","getItem","apiInstance","create","baseURL","api","interceptors","request","use","config","headers","err","console","log","response"],"sources":["/home/german/Escritorio/frontend-employe/src/shared/interceptors/axios.interceptor.tsx"],"sourcesContent":["import { render } from \"@testing-library/react\";\nimport axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { ToastErrors } from \"../messages/errorsMessages\";\nimport routesApi from \"../routes/routesAPi.routes\";\n\nconst token = localStorage.getItem(\"tokenUser\");\n\nconst apiInstance = axios.create({ baseURL: routesApi.api });\n\napiInstance.interceptors.request.use(\n  (config: AxiosRequestConfig) => {\n    config.headers = {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      \"x-access-token\": token ? token : \"\",\n    };\n    return config;\n  },\n  (err: Error) => {\n    console.log(err);\n  }\n);\n\napiInstance.interceptors.response.use(\n  (response: AxiosResponse) => {\n    return response;\n  },\n  (err) => {\n    render(<ToastErrors />);\n    return render(<div>\"err.response\"</div>);\n  }\n);\n\nexport default apiInstance;\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,MAA6C,OAAO;AAChE,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,SAAS,MAAM,4BAA4B;AAAC;AAEnD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAE/C,MAAMC,WAAW,GAAGN,KAAK,CAACO,MAAM,CAAC;EAAEC,OAAO,EAAEN,SAAS,CAACO;AAAI,CAAC,CAAC;AAE5DH,WAAW,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACjCC,MAA0B,IAAK;EAC9BA,MAAM,CAACC,OAAO,GAAG;IACf,cAAc,EAAE,gCAAgC;IAChD,gBAAgB,EAAEX,KAAK,GAAGA,KAAK,GAAG;EACpC,CAAC;EACD,OAAOU,MAAM;AACf,CAAC,EACAE,GAAU,IAAK;EACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;AAClB,CAAC,CACF;AAEDT,WAAW,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAClCM,QAAuB,IAAK;EAC3B,OAAOA,QAAQ;AACjB,CAAC,EACAH,GAAG,IAAK;EACPhB,MAAM,eAAC,QAAC,WAAW;IAAA;IAAA;IAAA;EAAA,QAAG,CAAC;EACvB,OAAOA,MAAM,eAAC;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAyB,CAAC;AAC1C,CAAC,CACF;AAED,eAAeO,WAAW"},"metadata":{},"sourceType":"module"}