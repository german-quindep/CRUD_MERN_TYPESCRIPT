{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { postLogin } from \"../../services/login.service\";\nexport const LoginFormHooks = () => {\n  _s();\n  const [loginInput, setLoginInput] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState();\n  const validateInputs = e => {\n    if (e.target.value.length >= 5 && e.target.value.length <= 20) {\n      console.log(\"error falta caracteres\");\n    }\n    if (e.target.value.trim()) {\n      console.log(\"no debe estar vacio\");\n    }\n    return;\n  };\n  /* CHANGE */\n  const useChangeInput = e => {\n    console.log(e);\n    validateInputs(e);\n    setLoginInput({\n      ...loginInput,\n      [e.target.name]: e.target.value\n    });\n  };\n  /* HANDLESUBMIT */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const resp = await postLogin(loginInput);\n    console.log(resp);\n  };\n  return {\n    useChangeInput,\n    handleSubmit\n  };\n};\n_s(LoginFormHooks, \"Wa58o+fwoEf8vrXc7I1ZubLIodg=\");\n_c = LoginFormHooks;\nvar _c;\n$RefreshReg$(_c, \"LoginFormHooks\");","map":{"version":3,"names":["useState","postLogin","LoginFormHooks","loginInput","setLoginInput","username","password","errors","setErrors","validateInputs","e","target","value","length","console","log","trim","useChangeInput","name","handleSubmit","preventDefault","resp"],"sources":["/home/german/Escritorio/frontend-employe/src/login/components/form/Form.component.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ILogin } from \"../../models/Ilogin.interface\";\nimport { postLogin } from \"../../services/login.service\";\n\nexport const LoginFormHooks = () => {\n  const [loginInput, setLoginInput] = useState<ILogin>({\n    username: \"\",\n    password: \"\",\n  });\n  const [errors, setErrors] = useState();\n  const validateInputs = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.length >= 5 && e.target.value.length <= 20) {\n      console.log(\"error falta caracteres\");\n    }\n    if (e.target.value.trim()) {\n      console.log(\"no debe estar vacio\");\n    }\n    return;\n  };\n  /* CHANGE */\n  const useChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(e);\n    validateInputs(e);\n    setLoginInput({\n      ...loginInput,\n      [e.target.name]: e.target.value,\n    });\n  };\n  /* HANDLESUBMIT */\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const resp = await postLogin(loginInput);\n    console.log(resp);\n  };\n  return { useChangeInput, handleSubmit };\n};\n"],"mappings":";AAAA,SAAgBA,QAAQ,QAAQ,OAAO;AAEvC,SAASC,SAAS,QAAQ,8BAA8B;AAExD,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAS;IACnDK,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,EAAE;EACtC,MAAMS,cAAc,GAAIC,CAAsC,IAAK;IACjE,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,IAAI,CAAC,IAAIH,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,IAAI,EAAE,EAAE;MAC7DC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC;IACA,IAAIL,CAAC,CAACC,MAAM,CAACC,KAAK,CAACI,IAAI,EAAE,EAAE;MACzBF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC;IACA;EACF,CAAC;EACD;EACA,MAAME,cAAc,GAAIP,CAAsC,IAAK;IACjEI,OAAO,CAACC,GAAG,CAACL,CAAC,CAAC;IACdD,cAAc,CAACC,CAAC,CAAC;IACjBN,aAAa,CAAC;MACZ,GAAGD,UAAU;MACb,CAACO,CAAC,CAACC,MAAM,CAACO,IAAI,GAAGR,CAAC,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EACD;EACA,MAAMO,YAAY,GAAG,MAAOT,CAAmC,IAAK;IAClEA,CAAC,CAACU,cAAc,EAAE;IAClB,MAAMC,IAAI,GAAG,MAAMpB,SAAS,CAACE,UAAU,CAAC;IACxCW,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;EACnB,CAAC;EACD,OAAO;IAAEJ,cAAc;IAAEE;EAAa,CAAC;AACzC,CAAC;AAAC,GA/BWjB,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}