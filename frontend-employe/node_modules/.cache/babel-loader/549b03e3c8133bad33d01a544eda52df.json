{"ast":null,"code":"export const validateLoginInput = form => {\n  let errors = {};\n  if (form.username.trim()) {\n    errors = {\n      type: \"required\",\n      msg: \"El campo username es requerido\"\n    };\n  }\n  /*   if (form.username.length > 5 && form.username.length < 10) {\n      errors = {\n        type: \"longitud\",\n        msg: \"El campo username debe tener una longitud entre 5 a 10 caracteres\",\n      };\n    }\n    if (form.username.match(/^[^$&{}|<>]*$/)) {\n      errors = {\n        type: \"longitud\",\n        msg: \"El campo username no debe tener caracteres especiales $&{}|<>\",\n      };\n    } */\n  return errors;\n};","map":{"version":3,"names":["validateLoginInput","form","errors","username","trim","type","msg"],"sources":["/home/german/Escritorio/frontend-employe/src/login/validations/validateInputs.ts"],"sourcesContent":["import { ILogin } from \"../models/Ilogin.interface\";\n\ninterface ErrorsInputs {\n  type?: string;\n  msg?: string;\n}\n\nexport const validateLoginInput = (form: ILogin) => {\n  let errors: ErrorsInputs = {};\n  if (form.username.trim()) {\n    errors = {\n      type: \"required\",\n      msg: \"El campo username es requerido\",\n    };\n  }\n/*   if (form.username.length > 5 && form.username.length < 10) {\n    errors = {\n      type: \"longitud\",\n      msg: \"El campo username debe tener una longitud entre 5 a 10 caracteres\",\n    };\n  }\n  if (form.username.match(/^[^$&{}|<>]*$/)) {\n    errors = {\n      type: \"longitud\",\n      msg: \"El campo username no debe tener caracteres especiales $&{}|<>\",\n    };\n  } */\n  return errors;\n};\n"],"mappings":"AAOA,OAAO,MAAMA,kBAAkB,GAAIC,IAAY,IAAK;EAClD,IAAIC,MAAoB,GAAG,CAAC,CAAC;EAC7B,IAAID,IAAI,CAACE,QAAQ,CAACC,IAAI,EAAE,EAAE;IACxBF,MAAM,GAAG;MACPG,IAAI,EAAE,UAAU;MAChBC,GAAG,EAAE;IACP,CAAC;EACH;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOJ,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module"}