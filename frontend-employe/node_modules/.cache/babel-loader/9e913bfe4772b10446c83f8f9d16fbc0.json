{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../../shared/context/auth.context\";\nimport routesFront from \"../../../shared/routes/routesFront.routes\";\nimport { postLogin } from \"../../services/login.services\";\nexport const LoginComponent = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    setContext\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const onSubmit = async data => {\n    const resp = await postLogin(data);\n    setContext(true);\n    navigate(`${routesFront.module}`);\n  };\n  return {\n    register,\n    handleSubmit,\n    control,\n    errors,\n    onSubmit\n  };\n};\n_s(LoginComponent, \"4adyKKwylgIN1+GvYSu6jSJ0AsQ=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["useContext","useForm","useNavigate","AuthContext","routesFront","postLogin","LoginComponent","register","handleSubmit","control","formState","errors","setContext","navigate","onSubmit","data","resp","module"],"sources":["/home/german/Escritorio/frontend-employe/src/login/components/Forms/FormLogin.components.ts"],"sourcesContent":["import { useContext } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../../shared/context/auth.context\";\nimport routesFront from \"../../../shared/routes/routesFront.routes\";\nimport { ILogin } from \"../../models/ILogin\";\nimport { postLogin } from \"../../services/login.services\";\n\nexport const LoginComponent = () => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm<ILogin>();\n  const { setContext } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n\n  const onSubmit: SubmitHandler<ILogin> = async (data) => {\n    const resp = await postLogin(data);\n    setContext(true);\n    navigate(`${routesFront.module}`);\n  };\n\n  return { register, handleSubmit, control, errors, onSubmit };\n};\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAAwBC,OAAO,QAAQ,iBAAiB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,sCAAsC;AAClE,OAAOC,WAAW,MAAM,2CAA2C;AAEnE,SAASC,SAAS,QAAQ,+BAA+B;AAEzD,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAClC,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,OAAO;IACPC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGV,OAAO,EAAU;EACrB,MAAM;IAAEW;EAAW,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAE9C,MAAMU,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,QAA+B,GAAG,MAAOC,IAAI,IAAK;IACtD,MAAMC,IAAI,GAAG,MAAMX,SAAS,CAACU,IAAI,CAAC;IAClCH,UAAU,CAAC,IAAI,CAAC;IAChBC,QAAQ,CAAE,GAAET,WAAW,CAACa,MAAO,EAAC,CAAC;EACnC,CAAC;EAED,OAAO;IAAEV,QAAQ;IAAEC,YAAY;IAAEC,OAAO;IAAEE,MAAM;IAAEG;EAAS,CAAC;AAC9D,CAAC;AAAC,GAlBWR,cAAc;EAAA,QAMrBL,OAAO,EAGMC,WAAW;AAAA;AAAA,KATjBI,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}