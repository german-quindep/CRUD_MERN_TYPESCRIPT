{"ast":null,"code":"var _jsxFileName = \"/home/german/Escritorio/frontend-employe/src/shared/routes/routerNavigate.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport { RouterLogin } from \"../../login/routes/routerLogin\";\nimport { RouterPerson } from \"../../person/routes/routerPerson\";\nimport { RouterMain } from \"../components/main/routes/main.routes\";\nimport { ProtectedRoutes } from \"./ProtectedRoutes\";\nimport routesFront from \"./routesFrontend.routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RouterNavigate = () => {\n  _s();\n  const [users, setUsers] = useState(false);\n  useEffect(() => {\n    const tokenUsers = localStorage.getItem(\"tokenUser\");\n    if (tokenUsers) setUsers(true);else setUsers(false);\n  }, [users]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: users ? /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: routesFront.module + routesFront.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 27\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: routesFront.module + \"/*\",\n          element: /*#__PURE__*/_jsxDEV(RouterMain, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 62\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: routesFront.module + \"/*\",\n          element: /*#__PURE__*/_jsxDEV(RouterPerson, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RouterLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(RouterNavigate, \"QE/LEQenXXkpUR6LHjK6Kp5p0gg=\");\n_c = RouterNavigate;\nvar _c;\n$RefreshReg$(_c, \"RouterNavigate\");","map":{"version":3,"names":["useEffect","useState","BrowserRouter","Navigate","Route","Routes","RouterLogin","RouterPerson","RouterMain","ProtectedRoutes","routesFront","RouterNavigate","users","setUsers","tokenUsers","localStorage","getItem","module","main"],"sources":["/home/german/Escritorio/frontend-employe/src/shared/routes/routerNavigate.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport { RouterLogin } from \"../../login/routes/routerLogin\";\nimport { RouterPerson } from \"../../person/routes/routerPerson\";\nimport { RouterMain } from \"../components/main/routes/main.routes\";\nimport { ProtectedRoutes } from \"./ProtectedRoutes\";\nimport routesFront from \"./routesFrontend.routes\";\nexport const RouterNavigate = () => {\n  const [users, setUsers] = useState<boolean>(false);\n\n  useEffect(() => {\n    const tokenUsers = localStorage.getItem(\"tokenUser\");\n    if (tokenUsers) setUsers(true);\n    else setUsers(false);\n  }, [users]);\n  \n  return (\n    <BrowserRouter>\n      {users ? (\n        <Routes>\n          {/* RENDERED TO MAIN MODULE WHEN USERS TOKEN EXISTS */}\n          <Route\n            path=\"*\"\n            element={<Navigate to={routesFront.module + routesFront.main} />}\n          />\n          {/* ESPECIFICIAR LAS RUTAS Y LA PROTECCION DE LAS RUTAS */}\n          <Route element={<ProtectedRoutes users={users} />}>\n            {/* ROUTE PARA USAR LAS ROUTES */}\n            <Route path={routesFront.module + \"/*\"} element={<RouterMain />} />\n            <Route\n              path={routesFront.module + \"/*\"}\n              element={<RouterPerson />}\n            />\n          </Route>\n        </Routes>\n      ) : (\n        <RouterLogin />\n      )}\n    </BrowserRouter>\n  );\n};\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,WAAW,MAAM,yBAAyB;AAAC;AAClD,OAAO,MAAMC,cAAc,GAAG,MAAM;EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,IAAIF,UAAU,EAAED,QAAQ,CAAC,IAAI,CAAC,CAAC,KAC1BA,QAAQ,CAAC,KAAK,CAAC;EACtB,CAAC,EAAE,CAACD,KAAK,CAAC,CAAC;EAEX,oBACE,QAAC,aAAa;IAAA,UACXA,KAAK,gBACJ,QAAC,MAAM;MAAA,wBAEL,QAAC,KAAK;QACJ,IAAI,EAAC,GAAG;QACR,OAAO,eAAE,QAAC,QAAQ;UAAC,EAAE,EAAEF,WAAW,CAACO,MAAM,GAAGP,WAAW,CAACQ;QAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACjE,eAEF,QAAC,KAAK;QAAC,OAAO,eAAE,QAAC,eAAe;UAAC,KAAK,EAAEN;QAAM;UAAA;UAAA;UAAA;QAAA,QAAI;QAAA,wBAEhD,QAAC,KAAK;UAAC,IAAI,EAAEF,WAAW,CAACO,MAAM,GAAG,IAAK;UAAC,OAAO,eAAE,QAAC,UAAU;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACnE,QAAC,KAAK;UACJ,IAAI,EAAEP,WAAW,CAACO,MAAM,GAAG,IAAK;UAChC,OAAO,eAAE,QAAC,YAAY;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAC1B;MAAA;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,gBAET,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA;EACb;IAAA;IAAA;IAAA;EAAA,QACa;AAEpB,CAAC;AAAC,GAjCWN,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module"}