{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const SearchPersonComponent = () => {\n  _s();\n  const [filteredPerson, setFilteredPersons] = useState([]);\n  const [selectedPerson, setSelectedPersons] = useState(\"\");\n  const persons = [{\n    full_name: \"Pepe Jose\",\n    id_person: \"asdasdasdasdasd\",\n    state: true,\n    identity: 98762123\n  }, {\n    full_name: \"Lucho Pancho\",\n    id_person: \"sdasda\",\n    state: true,\n    identity: 9876521\n  }, {\n    full_name: \"Juan Carlos\",\n    id_person: \"qwe123\",\n    state: true,\n    identity: 123242\n  }, {\n    full_name: \"Mario Jose\",\n    id_person: \"gfsd23\",\n    state: true,\n    identity: 535657\n  }];\n  const searchPersons = event => {\n    let _filteredCountries;\n    if (!event.query.trim().length) {\n      _filteredCountries = [...persons];\n    } else {\n      _filteredCountries = persons.filter(persons => {\n        return persons.full_name.toLowerCase().startsWith(event.query.toLowerCase());\n      });\n    }\n    setFilteredPersons(_filteredCountries);\n  };\n  return {\n    selectedPerson,\n    filteredPerson,\n    searchPersons,\n    setSelectedPersons\n  };\n};\n_s(SearchPersonComponent, \"IRK4RQsR4QRRNtfwLUTppvGtfug=\");\n_c = SearchPersonComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchPersonComponent\");","map":{"version":3,"names":["useState","SearchPersonComponent","filteredPerson","setFilteredPersons","selectedPerson","setSelectedPersons","persons","full_name","id_person","state","identity","searchPersons","event","_filteredCountries","query","trim","length","filter","toLowerCase","startsWith"],"sources":["/home/german/Escritorio/frontend-employe/src/person/components/AutoComplete/Search.component.ts"],"sourcesContent":["import { AutoCompleteCompleteMethodParams } from \"primereact\";\nimport { useState } from \"react\";\nimport { IPerson } from \"../../models/IPerson\";\n\n\n\nexport const SearchPersonComponent=()=>{\n    \n    const [filteredPerson, setFilteredPersons] = useState<Array<IPerson>>([]);\n    const [selectedPerson, setSelectedPersons] = useState<string>(\"\");\n  \n    const persons: Array<IPerson> = [\n      { full_name: \"Pepe Jose\", id_person: \"asdasdasdasdasd\",state:true,identity:98762123 },\n      { full_name: \"Lucho Pancho\", id_person: \"sdasda\" ,state:true,identity:9876521 },\n      { full_name: \"Juan Carlos\", id_person: \"qwe123\" ,state:true,identity:123242 },\n      { full_name: \"Mario Jose\", id_person: \"gfsd23\" ,state:true,identity:535657 },\n    ];\n  \n    const searchPersons = (event: AutoCompleteCompleteMethodParams) => {\n      let _filteredCountries: any;\n      if (!event.query.trim().length) {\n        _filteredCountries = [...persons];\n      } else {\n        _filteredCountries = persons.filter((persons: IPerson) => {\n          return persons.full_name\n            .toLowerCase()\n            .startsWith(event.query.toLowerCase());\n        });\n      }\n      setFilteredPersons(_filteredCountries);\n    };\n\n    return {selectedPerson, filteredPerson, searchPersons, setSelectedPersons}\n}"],"mappings":";AACA,SAASA,QAAQ,QAAQ,OAAO;AAKhC,OAAO,MAAMC,qBAAqB,GAAC,MAAI;EAAA;EAEnC,MAAM,CAACC,cAAc,EAAEC,kBAAkB,CAAC,GAAGH,QAAQ,CAAiB,EAAE,CAAC;EACzE,MAAM,CAACI,cAAc,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EAEjE,MAAMM,OAAuB,GAAG,CAC9B;IAAEC,SAAS,EAAE,WAAW;IAAEC,SAAS,EAAE,iBAAiB;IAACC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAS,CAAC,EACrF;IAAEH,SAAS,EAAE,cAAc;IAAEC,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAQ,CAAC,EAC/E;IAAEH,SAAS,EAAE,aAAa;IAAEC,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAO,CAAC,EAC7E;IAAEH,SAAS,EAAE,YAAY;IAAEC,SAAS,EAAE,QAAQ;IAAEC,KAAK,EAAC,IAAI;IAACC,QAAQ,EAAC;EAAO,CAAC,CAC7E;EAED,MAAMC,aAAa,GAAIC,KAAuC,IAAK;IACjE,IAAIC,kBAAuB;IAC3B,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,EAAE;MAC9BH,kBAAkB,GAAG,CAAC,GAAGP,OAAO,CAAC;IACnC,CAAC,MAAM;MACLO,kBAAkB,GAAGP,OAAO,CAACW,MAAM,CAAEX,OAAgB,IAAK;QACxD,OAAOA,OAAO,CAACC,SAAS,CACrBW,WAAW,EAAE,CACbC,UAAU,CAACP,KAAK,CAACE,KAAK,CAACI,WAAW,EAAE,CAAC;MAC1C,CAAC,CAAC;IACJ;IACAf,kBAAkB,CAACU,kBAAkB,CAAC;EACxC,CAAC;EAED,OAAO;IAACT,cAAc;IAAEF,cAAc;IAAES,aAAa;IAAEN;EAAkB,CAAC;AAC9E,CAAC;AAAA,GA3BYJ,qBAAqB;AAAA,KAArBA,qBAAqB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}